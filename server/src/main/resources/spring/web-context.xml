<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->
    <context:component-scan base-package="org.craftercms.studio.web"/>
    <context:property-placeholder file-encoding="UTF-8" location="classpath*:cstudio.properties"/>
    <context:property-placeholder file-encoding="UTF-8" location="classpath*:/extension/studio3/cstudio.properties"/>

    <annotation-driven content-negotiation-manager="contentNegotiationManager">
        <message-converters>
            <beans:bean id="jacksonMessageConverter"
                        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <beans:property name="supportedMediaTypes" value="application/json"/>
                <beans:property name="prettyPrint" value="true"/>
                <beans:property name="objectMapper" >
                    <beans:bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <beans:property name="dateFormat">
                            <beans:bean class="java.text.SimpleDateFormat">
                                <beans:constructor-arg type="java.lang.String" value="${studio3.web.mapping.dateFormat}"/>
                            </beans:bean>
                        </beans:property>
                    </beans:bean>
                </beans:property>
            </beans:bean>
        </message-converters>
    </annotation-driven>

    <resources mapping="/resources/**" location="/resources"/>

    <beans:bean id="multipartResolver"
                class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="104857600"/>
        <!-- the maximum file size in bytes: 100 MB -->
    </beans:bean>

    <beans:bean id="contentNegotiationManager"
                class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <beans:property name="favorPathExtension" value="true" />
        <beans:property name="favorParameter" value="false" />
        <beans:property name="ignoreAcceptHeader" value="false" />
        <beans:property name="defaultContentType" value="application/json"/>
        <beans:property name="useJaf" value="true"/>
        <beans:property name="mediaTypes">
            <beans:value>
                json=application/json
                html=text/html
                *=*/*
            </beans:value>
        </beans:property>
    </beans:bean>

    <!-- freemarker config -->
    <beans:bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <beans:property name="templateLoaderPath" value="/WEB-INF/views/"/>
    </beans:bean>

    <!--

      View resolvers can also be configured with ResourceBundles or XML files. If you need
      different view resolving based on Locale, you have to use the resource bundle resolver.

    -->
    <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <beans:property name="cache" value="true"/>
        <beans:property name="prefix" value=""/>
        <beans:property name="suffix" value=".ftl"/>
    </beans:bean>


   <beans:import resource="classpath*:/spring/*-studio3-web-context.xml"/>
    <beans:import resource="classpath*:/extension/studio3/*-studio3-web-context.xml"/>
</beans:beans>
